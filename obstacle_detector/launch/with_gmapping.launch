<!-- Starts two hokuyo nodes, IRA scan merger, CSM scan matcher, GMapping and Rviz. -->

<launch>
  <!-- Start front hokuyo laser scanner -->
  <node name="front_hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" required="false" output="screen">
    <param name="port" type="string" value="/dev/sensors/hokuyo_H0904847"/>
    <param name="frame_id" type="string" value="/front_laser"/>

    <param name="intensity" type="bool" value="false"/>
    <param name="calibrate_time" type="bool" value="true"/>

    <param name="min_ang" value="-2.0862"/>	<!-- +/-120 [deg] -->
    <param name="max_ang" value="2.0923"/>
    <param name="skip" value="0"/>
    <param name="time_offset" value="0.0"/>
    <param name="cluster" value="1"/>

    <remap from="/scan" to="/front_scan"/>
  </node>

  <!-- Start rear hokuyo laser scanner -->
  <node name="rear_hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" required="false" output="screen">
    <param name="port" type="string" value="/dev/sensors/hokuyo_H1320250"/>
    <param name="frame_id" type="string" value="/rear_laser"/>

    <param name="intensity" type="bool" value="false"/>
    <param name="calibrate_time" type="bool" value="true"/>

    <param name="min_ang" value="-2.0862"/>	<!-- +/-120 [deg] -->
    <param name="max_ang" value="2.0923"/>
    <param name="skip" value="0"/>
    <param name="time_offset" value="0.0"/>
    <param name="cluster" value="1"/>

    <remap from="/scan" to="/rear_scan"/>
  </node>

  <node name="base_to_front_laser" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="0.1825 0 0 0 0 0 /base /front_laser 100"/>

  <node name="base_to_rear_laser" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="-0.1825 0 0 3.14159265 0 0 /base /rear_laser 100"/>

  <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
    <param name="destination_frame" value="/laser"/>
    <param name="cloud_destination_topic" value="/merged_cloud"/>
    <param name="scan_destination_topic" value="/scan"/>
    <param name="laserscan_topics" value ="/front_scan /rear_scan"/>
  </node>

  <node name="base_to_laser" pkg="tf" type="static_transform_publisher" respawn="false" required="false" output="screen" args="0 0 0 0 0 0 /base /laser 100"/>

  <node name="scan_matching" pkg="laser_scan_matcher" type="laser_scan_matcher_node" respawn="false" required="false"  output="screen">
    <param name="fixed_frame" value="/world"/>
    <param name="base_frame" value="/base"/>
    
    <param name="use_imu" value="false"/>
    <param name="use_odom" value="false"/>
    <param name="use_vel"  value="false"/>
    <param name="use_cloud_input" value="false"/>

    <param name="publish_tf" value="true"/>
    <param name="publish_pose" value="true"/>

    <param name="kf_dist_linear" value="0.0"/>
    <param name="kf_dist_angular" value="0.0"/>
  </node>

  <param name="use_sim_time" value="false"/> 
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="odom_frame" value="/world"/>
    <param name="base_frame" value="/base"/>
    <param name="map_frame" value="/map"/>

    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="5.6"/>
    <!-- Minimum score for considering the outcome of the scan matching good. Can avoid jumping pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m). Scores go up to 600+, try 50 for example when experiencing jumping estimate issues. -->
    <param name="minimumScore" value="0.0"/> 

    <param name="linearUpdate" value="0.1"/>
    <param name="angularUpdate" value="0.5"/>
    <param name="temporalUpdate" value="3.0"/>

    <param name="particles" value="30"/>
    <param name="xmin" value="-10.0"/>
    <param name="ymin" value="-10.0"/>
    <param name="xmax" value="10.0"/>
    <param name="ymax" value="10.0"/>
    <param name="delta" value="0.05"/> 

    <param name="transform_publish_period" value="0.01"/>
  </node>

  <node pkg="rviz" type="rviz" name="rviz" output="screen" args="-d $(find obstacle_detector)/resources/combined.rviz"/>
</launch>
